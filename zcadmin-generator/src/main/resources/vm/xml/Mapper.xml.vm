<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package}.mapper.${className}Mapper">
    <resultMap type="${className}" id="BaseResultMap">
        #foreach ($column in $columns)
            <result property="${column.attrNameFirstToLow}" jdbcType="${column.columnJdbcType}" column="${column.columnName}"/>
            #end
    </resultMap>
    ## 访问循环的当前目标的index可通过$foreach.count，$velocityCount已失效
    ## https://blog.csdn.net/qq_16135637/article/details/81164499
    <sql id="Base_Column_List">
        #foreach($column in $columns)$column.columnName#if($foreach.count != $columns.size()),#end#end

    </sql>
    ## 1. 主键属性名  2. 主键类型  3. 主键column名 4. 主键类型
    <select id="selectByPrimaryKey" parameterType="java.lang.${primaryKey.columnJavaType}" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ${tableName}
        where ${primaryKey.columnName} = #{${primaryKey.attrNameFirstToLow},jdbcType=${primaryKey.columnJdbcType}}
    </select>

    <select id="selectListBySelective" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ${tableName}
        where 1=1
#foreach($column in $columns)
    #if($column.queryType=='like')
            <if test="$column.attrNameFirstToLow != null #if($column.columnJavaType =='String' ) and $column.attrNameFirstToLow.trim() != '' #end">
                and $column.columnName like CONCAT('%',#{$column.attrNameFirstToLow},'%' )
            </if>
#elseif($column.queryType=='between')
    <if test="record.beginTime!= null and record.beginTime != ''">AND $column.columnName <![CDATA[>=]]> #{beginTime}</if>
    <if test="record.afterTime!= null and record.afterTime != ''">AND $column.columnName <![CDATA[<=]]>#{afterTIme}</if>
#elseif($column.queryType=='not null')
        and $column.columnName not null
#else
        <if test="$column.attrNameFirstToLow != null #if($column.columnJavaType =='String' ) and $column.attrNameFirstToLow.trim() != '' #end">
            and $column.columnName $column.queryType #{$column.attrNameFirstToLow,jdbcType=${column.columnJdbcType}}
        </if>
#end
    #end
    </select>

    <select id="selectOneBySelective" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ${tableName}
        where 1=1
        #foreach($column in $columns)
            #if($column.queryType=='like')
                <if test="$column.attrNameFirstToLow != null #if($column.columnJavaType =='String' ) and $column.attrNameFirstToLow.trim() != '' #end">
                    and $column.columnName like CONCAT('%',#{$column.attrNameFirstToLow},'%' )
                </if>
            #elseif($column.queryType=='between')
                <if test="record.beginTime!= null and record.beginTime != ''">AND $column.columnName <![CDATA[>=]]> #{beginTime}</if>
                <if test="record.afterTime!= null and record.afterTime != ''">AND $column.columnName <![CDATA[<=]]>#{afterTIme}</if>
            #elseif($column.queryType=='not null')
                and $column.columnName not null
            #else
                <if test="$column.attrNameFirstToLow != null #if($column.columnJavaType =='String' ) and $column.attrNameFirstToLow.trim() != '' #end">
                    and $column.columnName $column.queryType #{$column.attrNameFirstToLow,jdbcType=${column.columnJdbcType}}
                </if>
            #end
        #end
        limit 1
    </select>


    <select id="selectPageBySelective" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ${tableName}
        where 1=1
        #foreach($column in $columns)
            #if($column.queryType=='like')
                <if test="record.$column.attrNameFirstToLow != null #if($column.columnJavaType =='String' ) and record.$column.attrNameFirstToLow.trim() != '' #end">
                    and $column.columnName like CONCAT('%',#{record.$column.attrNameFirstToLow},'%' )
                </if>
            #elseif($column.queryType=='between')
                <if test="record.beginTime!= null and record.beginTime != ''">AND $column.columnName <![CDATA[>=]]> #{record.beginTime}</if>
                <if test="record.afterTime!= null and record.afterTime != ''">AND $column.columnName <![CDATA[<=]]>#{record.afterTIme}</if>
            #elseif($column.queryType=='not null')
                and $column.columnName not null
            #else
                <if test="record.$column.attrNameFirstToLow != null #if($column.columnJavaType =='String' ) and record.$column.attrNameFirstToLow.trim() != '' #end">
                    and $column.columnName $column.queryType #{record.$column.attrNameFirstToLow,jdbcType=$column.columnJdbcType}
                </if>
            #end
        #end
    </select>

    <select id="selectByPrimaryKeys" parameterType="java.util.List"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ${tableName}
        where ${primaryKey.columnName} in
        <foreach collection="list" item="ids" index="index" open="(" close=")" separator=",">
            #{ids}
        </foreach>
    </select>

    <select id="selectCountBySelective" resultType="java.lang.Integer">
        select
        count(1)
        from ${tableName}
        where 1=1
        #foreach($column in $columns)
            #if($column.queryType=='like')
                <if test="$column.attrNameFirstToLow != null #if($column.columnJavaType =='String' ) and $column.attrNameFirstToLow.trim() != '' #end">
                    and $column.columnName like CONCAT('%',#{$column.attrNameFirstToLow},'%' )
                </if>
            #elseif($column.queryType=='between')
                <if test="record.beginTime!= null and record.beginTime != ''">AND $column.columnName <![CDATA[>=]]> #{beginTime}</if>
                <if test="record.afterTime!= null and record.afterTime != ''">AND $column.columnName <![CDATA[<=]]>#{afterTIme}</if>
            #elseif($column.queryType=='not null')
                and $column.columnName not null
            #else
                <if test="$column.attrNameFirstToLow != null #if($column.columnJavaType =='String' ) and $column.attrNameFirstToLow.trim() != '' #end">
                    and $column.columnName $column.queryType #{$column.attrNameFirstToLow,jdbcType=${column.columnJdbcType}}
                </if>
            #end
        #end
    </select>

    <insert id="insert" parameterType="${className}" #if($primaryKey.extra == 'auto_increment')
            useGeneratedKeys="true" keyProperty="$primaryKey.attrNameFirstToLow"#end>
        insert into ${tableName} (
#foreach ($column in $columns)
            $column.columnName#if($foreach.count != $columns.size()),#end
#end    )
        values
        (#foreach ($column in $columns)
         #{$column.attrNameFirstToLow,jdbcType=$column.columnJdbcType}#if($foreach.count != $columns.size()),#end#end)
    </insert>

    <insert id="insertSelective" parameterType="${className}"#if($primaryKey.extra == 'auto_increment')
            useGeneratedKeys="true" keyProperty="$primaryKey.attrNameFirstToLow"#end>
        insert into ${tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #foreach($column in $columns)
                #if($column.columnName != $primaryKey.columnName || $primaryKey.extra != 'auto_increment')
                    <if test="$column.attrNameFirstToLow != null #if($column.columnJavaType ==
                        'String' ) and $column.attrNameFirstToLow != '' #end ">$column.columnName,</if>
                #end
            #end
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #foreach($column in $columns)
                #if($column.columnName != $primaryKey.columnName || $primaryKey.extra != 'auto_increment')
                    <if test="$column.attrNameFirstToLow != null #if($column.columnJavaType ==
                        'String' ) and $column.attrNameFirstToLow != '' #end ">#{$column.attrNameFirstToLow,jdbcType=$column.columnJdbcType},</if>
                #end
            #end
        </trim>
    </insert>


    <insert id="insertBatch" parameterType="java.util.List" #if($primaryKey.extra == 'auto_increment')
            useGeneratedKeys="true" keyProperty="$primaryKey.attrNameFirstToLow"#end>
        insert into  ${tableName} (
#foreach ($column in $columns)
            $column.columnName#if($foreach.count != $columns.size()),#end
#end
        )
        values
        <foreach collection="recordList" item="record" index="index" separator=",">
            (
#foreach ($column in $columns)
                #{record.$column.attrNameFirstToLow,jdbcType=$column.columnJdbcType}#if($foreach.count != $columns.size()),#end
#end
            )
        </foreach>
    </insert>

    <update id="update" parameterType="${className}">
        update ${tableName} set
            #foreach ($column in $columns)
                $column.columnName =#{$column.attrNameFirstToLow,jdbcType=$column.columnJdbcType} #if($foreach.count != $columns.size()),#end
            #end
        where ${primaryKey.columnName} = #{${primaryKey.attrNameFirstToLow},jdbcType=${primaryKey.columnJdbcType}}
    </update>

    <update id="updateSelective" parameterType="${className}">
        update ${tableName}
        <trim prefix="SET" suffixOverrides=",">
#foreach($column in $columns)
                #if($column.columnName != $primaryKey.columnName)
                    <if test="$column.attrNameFirstToLow != null #if($column.columnJavaType ==
                        'String' ) and $column.attrNameFirstToLow != '' #end ">$column.columnName = #{$column.attrNameFirstToLow,jdbcType=$column.columnJdbcType},</if>
                #end
#end
        </trim>
        where ${primaryKey.columnName} = #{${primaryKey.attrNameFirstToLow},jdbcType=${primaryKey.columnJdbcType}}
    </update>

    <update id="updateParamsBySelective" parameterType="${className}">
        update ${tableName}
        <trim prefix="SET" suffixOverrides=",">
            #foreach($column in $columns)
                #if($column.columnName != $primaryKey.columnName)
                    <if test="params.$column.attrNameFirstToLow != null #if($column.columnJavaType ==
                        'String' ) and params.$column.attrNameFirstToLow != '' #end ">$column.columnName = #{params.$column.attrNameFirstToLow,jdbcType=$column.columnJdbcType},</if>
                #end
            #end
        </trim>
        where 1=1
        #foreach($column in $columns)
            #if($column.queryType=='like')
                <if test="record.$column.attrNameFirstToLow != null #if($column.columnJavaType =='String' ) and record.$column.attrNameFirstToLow.trim() != '' #end">
                    and $column.columnName like CONCAT('%',#{record.$column.attrNameFirstToLow},'%' )
                </if>
            #elseif($column.queryType=='between')
                <if test="record.beginTime!= null and record.beginTime != ''">AND $column.columnName <![CDATA[>=]]> #{record.beginTime}</if>
                <if test="record.afterTime!= null and record.afterTime != ''">AND $column.columnName <![CDATA[<=]]>#{record.afterTIme}</if>
            #elseif($column.queryType=='not null')
                and $column.columnName not null
            #else
                <if test="record.$column.attrNameFirstToLow != null #if($column.columnJavaType =='String' ) and record.$column.attrNameFirstToLow.trim() != '' #end">
                    and $column.columnName $column.queryType #{record.$column.attrNameFirstToLow,jdbcType=$column.columnJdbcType}
                </if>
            #end
        #end


    </update>


    <update id="updateBatch" parameterType="java.util.List">
        update ${tableName}
        <trim prefix="SET" suffixOverrides=",">
            #foreach($column in $columns)
                #if($column.columnName != $primaryKey.columnName)
                    <trim prefix="$column.columnName = case" suffix="end,">
                        <foreach collection="list" index="index" item="records">
                            when ${primaryKey.columnName} = #{records.${primaryKey.attrNameFirstToLow},jdbcType=${primaryKey.columnJdbcType}} then #{records.$column.attrNameFirstToLow,jdbcType=$column.columnJdbcType}
                        </foreach>
                    </trim>
                #end
            #end
        </trim>
        where ${primaryKey.columnName} in
        <foreach collection="list" item="records" open="(" close=")" separator=", ">
            #{records.${primaryKey.attrNameFirstToLow}}
        </foreach>
    </update>

    <update id="updateBatchSelective" parameterType="java.util.List">
        update ${tableName}
        <trim prefix="SET" suffixOverrides=",">
            #foreach($column in $columns)
                #if($column.columnName != $primaryKey.columnName)
                    <trim prefix="$column.columnName = case" suffix="end,">
                        <foreach collection="list" index="index" item="records">
                            <if test="records.$column.attrNameFirstToLow != null #if($column.columnJavaType == 'String' ) and records.$column.attrNameFirstToLow != '' #end " >
                            when ${primaryKey.columnName} = #{records.${primaryKey.attrNameFirstToLow},jdbcType=${primaryKey.columnJdbcType}} then #{records.$column.attrNameFirstToLow,jdbcType=$column.columnJdbcType}
                            </if>
                        </foreach>
                    </trim>
                #end
            #end
        </trim>
        where ${primaryKey.columnName} in
        <foreach collection="list" item="records" open="(" close=")" separator=", ">
            #{records.${primaryKey.attrNameFirstToLow}}
        </foreach>
    </update>

    <delete id="deleteBySelective" parameterType="java.lang.${primaryKey.columnJavaType}">
        delete
        from ${tableName} where 1=1
        #foreach($column in $columns)
            #if($column.queryType=='like')
                <if test="$column.attrNameFirstToLow != null #if($column.columnJavaType =='String' ) and $column.attrNameFirstToLow.trim() != '' #end">
                    and $column.columnName like CONCAT('%',#{$column.attrNameFirstToLow},'%' )
                </if>
            #elseif($column.queryType=='between')
                <if test="beginTime!= null and beginTime != ''">AND $column.columnName <![CDATA[>=]]> #{beginTime}</if>
                <if test="afterTime!= null and afterTime != ''">AND $column.columnName <![CDATA[<=]]>#{afterTIme}</if>
            #elseif($column.queryType=='not null')
                and $column.columnName not null
            #else
                <if test="$column.attrNameFirstToLow != null #if($column.columnJavaType =='String' ) and $column.attrNameFirstToLow.trim() != '' #end">
                    and $column.columnName $column.queryType #{$column.attrNameFirstToLow,jdbcType=$column.columnJdbcType}
                </if>
            #end
        #end
    </delete>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.${primaryKey.columnJavaType}">
        delete
        from ${tableName} where ${primaryKey.columnName} = #{${primaryKey.attrNameFirstToLow},jdbcType=${primaryKey.columnJdbcType}}
    </delete>

    <delete id="deleteByPrimaryKeys" parameterType="java.util.List">
        delete from ${tableName} where ${primaryKey.columnName} in
        <foreach collection="list" item="ids" index="index" open="(" close=")" separator=",">
            #{ids}
        </foreach>
    </delete>

</mapper>
