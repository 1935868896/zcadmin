<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zc.modules.test.mapper.BookMapper">
    <resultMap id="BaseResultMap" type="com.zc.modules.test.entity.Book">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="press" jdbcType="VARCHAR" property="press"/>
        <result column="pubdate" jdbcType="DATE" property="pubdate"/>
        <result column="price" jdbcType="DOUBLE" property="price"/>
        <result column="page" jdbcType="INTEGER" property="page"/>
        <result column="img" jdbcType="VARCHAR" property="img"/>
        <result column="feature" jdbcType="VARCHAR" property="feature"/>
        <result column="booktype" jdbcType="INTEGER" property="booktype"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, author, press, pubdate, price, page, img, feature, booktype
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByPrimaryKeys" parameterType="java.util.List" resultType="com.zc.modules.test.entity.Book">
        select
        <include refid="Base_Column_List"/>
        from book
        where id in
        <foreach collection="list" item="ids" index="index" open="(" close=")" separator=",">
            #{ids}
        </foreach>
    </select>

    <select id="selectListBySelective" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book
        where
        1=1
        <if test="id != null">and id = #{id,jdbcType=INTEGER}</if>
        <if test="name != null and name != ''">and name like CONCAT('%','${name}','%' )</if>
        <if test="author != null and author != ''">and author =#{author,jdbcType=VARCHAR}</if>
        <if test="press != null and press !=''">and press =#{press,jdbcType=VARCHAR}</if>
    </select>


    <select id="selectCountBySelective" resultType="java.lang.Integer">
        select
        count(1)
        from book
        where
        1=1
        <if test="id != null">and id = #{id,jdbcType=INTEGER}</if>
        <if test="name != null and name != ''">and name like CONCAT('%','${name}','%' )</if>
        <if test="author != null and author != ''">and author =#{author,jdbcType=VARCHAR}</if>
        <if test="press != null and press !=''">and press =#{press,jdbcType=VARCHAR}</if>
    </select>

    <select id="selectPageBySelective" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book
        where
        1=1
        <if test="record.id != null">and id = #{record.id,jdbcType=INTEGER}</if>
        <if test="record.name != null and record.name != ''">and name like CONCAT('%','${record.name}','%' )</if>
        <if test="record.author != null and record.author != ''">and author =#{record.author,jdbcType=VARCHAR}</if>
        <if test="record.press != null and record.press !=''">and press =#{record.press,jdbcType=VARCHAR}</if>
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from book
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByPrimaryKeys" parameterType="java.util.List">
        delete
        from book
        where id in
        <foreach collection="list" item="ids" index="index" open="(" close=")" separator=",">
            #{ids}
        </foreach>
    </delete>
    <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into book (id, name, author,
        press, pubdate, price,
        page, img, feature,
        booktype)
        values
        <foreach collection="recordList" item="record" index="index" separator=",">
            (#{record.id,jdbcType=INTEGER}, #{record.name,jdbcType=VARCHAR}, #{record.author,jdbcType=VARCHAR},
            #{record.press,jdbcType=VARCHAR}, #{record.pubdate,jdbcType=DATE}, #{record.price,jdbcType=DOUBLE},
            #{record.page,jdbcType=INTEGER}, #{record.img,jdbcType=VARCHAR}, #{record.feature,jdbcType=VARCHAR},
            #{record.booktype,jdbcType=INTEGER})
        </foreach>
    </insert>

    <insert id="insert" parameterType="com.zc.modules.test.entity.Book">
        insert into book (id, name, author,
                          press, pubdate, price,
                          page, img, feature,
                          booktype)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR},
                #{press,jdbcType=VARCHAR}, #{pubdate,jdbcType=DATE}, #{price,jdbcType=DOUBLE},
                #{page,jdbcType=INTEGER}, #{img,jdbcType=VARCHAR}, #{feature,jdbcType=VARCHAR},
                #{booktype,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.zc.modules.test.entity.Book">
        insert into book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="press != null">
                press,
            </if>
            <if test="pubdate != null">
                pubdate,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="page != null">
                page,
            </if>
            <if test="img != null">
                img,
            </if>
            <if test="feature != null">
                feature,
            </if>
            <if test="booktype != null">
                booktype,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="press != null">
                #{press,jdbcType=VARCHAR},
            </if>
            <if test="pubdate != null">
                #{pubdate,jdbcType=DATE},
            </if>
            <if test="price != null">
                #{price,jdbcType=DOUBLE},
            </if>
            <if test="page != null">
                #{page,jdbcType=INTEGER},
            </if>
            <if test="img != null">
                #{img,jdbcType=VARCHAR},
            </if>
            <if test="feature != null">
                #{feature,jdbcType=VARCHAR},
            </if>
            <if test="booktype != null">
                #{booktype,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zc.modules.test.entity.Book">
        update book
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="press != null">
                press = #{press,jdbcType=VARCHAR},
            </if>
            <if test="pubdate != null">
                pubdate = #{pubdate,jdbcType=DATE},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DOUBLE},
            </if>
            <if test="page != null">
                page = #{page,jdbcType=INTEGER},
            </if>
            <if test="img != null">
                img = #{img,jdbcType=VARCHAR},
            </if>
            <if test="feature != null">
                feature = #{feature,jdbcType=VARCHAR},
            </if>
            <if test="booktype != null">
                booktype = #{booktype,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zc.modules.test.entity.Book">
        update book
        set name     = #{name,jdbcType=VARCHAR},
            author   = #{author,jdbcType=VARCHAR},
            press    = #{press,jdbcType=VARCHAR},
            pubdate  = #{pubdate,jdbcType=DATE},
            price    = #{price,jdbcType=DOUBLE},
            page     = #{page,jdbcType=INTEGER},
            img      = #{img,jdbcType=VARCHAR},
            feature  = #{feature,jdbcType=VARCHAR},
            booktype = #{booktype,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <!--     int batchUpdate(List<Book> records);   -->
    <update id="updateBatch" parameterType="java.util.List">
        update book
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="author = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.author,jdbcType=VARCHAR}
                </foreach>
            </trim>
        </trim>
        where book_id in
        <foreach close=")" collection="list" item="records" open="(" separator=", ">
            #{records.bookId,jdbcType=INTEGER}
        </foreach>
    </update>

    <!--     int batchUpdateSelective(List<Book> records); -->
    <update id="updateBatchSelective" parameterType="java.util.List">
        update book
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="name = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    <if test="records.name != null">
                        when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.name,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
        </trim>
        where book_id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.bookId,jdbcType=INTEGER}
        </foreach>
    </update>

</mapper>