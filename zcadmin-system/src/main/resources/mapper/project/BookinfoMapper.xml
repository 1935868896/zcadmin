<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zc.modules.project.mapper.BookInfoMapper">
    <resultMap type="BookInfo" id="BaseResultMap">
        <result property="bookId" jdbcType="INTEGER" column="book_id"/>
        <result property="status" jdbcType="VARCHAR" column="status"/>
        <result property="tags" jdbcType="VARCHAR" column="tags"/>
        <result property="score" jdbcType="VARCHAR" column="score"/>
        <result property="scoreCount" jdbcType="VARCHAR" column="score_count"/>
        <result property="title" jdbcType="VARCHAR" column="title"/>
        <result property="author" jdbcType="VARCHAR" column="author"/>
        <result property="cover" jdbcType="VARCHAR" column="cover"/>
        <result property="countWord" jdbcType="VARCHAR" column="count_word"/>
        <result property="updateAt" jdbcType="TIMESTAMP" column="update_at"/>
    </resultMap>
    <sql id="Base_Column_List">
        book_id,status,tags,score,score_count,title,author,cover,count_word,update_at
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book_info
        where book_id = #{bookId,jdbcType=INTEGER}
    </select>

    <select id="selectListBySelective" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book_info
        where 1=1
        <!--        <if test="name != null and name != ''">and name like CONCAT('%','${name}','%' )</if>-->
        <if test="bookId != null ">
            and book_id = #{bookId,jdbcType=INTEGER}
        </if>
        <if test="status != null  and status != '' ">
            and status = #{status,jdbcType=VARCHAR}
        </if>
        <if test="tags != null  and tags != '' ">
            and tags = #{tags,jdbcType=VARCHAR}
        </if>
        <if test="score != null  and score != '' ">
            and score = #{score,jdbcType=VARCHAR}
        </if>
        <if test="scoreCount != null  and scoreCount != '' ">
            and score_count = #{scoreCount,jdbcType=VARCHAR}
        </if>
        <if test="title != null  and title != '' ">
            and title = #{title,jdbcType=VARCHAR}
        </if>
        <if test="author != null  and author != '' ">
            and author = #{author,jdbcType=VARCHAR}
        </if>
        <if test="cover != null  and cover != '' ">
            and cover = #{cover,jdbcType=VARCHAR}
        </if>
        <if test="countWord != null  and countWord != '' ">
            and count_word = #{countWord,jdbcType=VARCHAR}
        </if>
        <if test="updateAt != null ">
            and update_at = #{updateAt,jdbcType=TIMESTAMP}
        </if>
    </select>

    <select id="selectPageBySelective" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book_info
        where 1=1
        <!-- <if test="name != null and name != ''">and name like CONCAT('%','${name}','%' )</if>-->
        <if test="record.bookId != null ">
            and book_id = #{record.bookId,jdbcType=INTEGER}
        </if>
        <if test="record.status != null  and record.status != '' ">
            and status = #{record.status,jdbcType=VARCHAR}
        </if>
        <if test="record.tags != null  and record.tags != '' ">
            and tags = #{record.tags,jdbcType=VARCHAR}
        </if>
        <if test="record.score != null  and record.score != '' ">
            and score = #{record.score,jdbcType=VARCHAR}
        </if>
        <if test="record.scoreCount != null  and record.scoreCount != '' ">
            and score_count = #{record.scoreCount,jdbcType=VARCHAR}
        </if>
        <if test="record.title != null  and record.title != '' ">
            and title = #{record.title,jdbcType=VARCHAR}
        </if>
        <if test="record.author != null  and record.author != '' ">
            and author = #{record.author,jdbcType=VARCHAR}
        </if>
        <if test="record.cover != null  and record.cover != '' ">
            and cover = #{record.cover,jdbcType=VARCHAR}
        </if>
        <if test="record.countWord != null  and record.countWord != '' ">
            and count_word = #{record.countWord,jdbcType=VARCHAR}
        </if>
        <if test="record.updateAt != null ">
            and update_at = #{record.updateAt,jdbcType=TIMESTAMP}
        </if>
    </select>

    <select id="selectByPrimaryKeys" parameterType="java.util.List"
            resultType="BookInfo">
        select
        <include refid="Base_Column_List"/>
        from book_info
        where book_id in
        <foreach collection="list" item="ids" index="index" open="(" close=")" separator=",">
            #{ids}
        </foreach>
    </select>

    <select id="selectCountBySelective" resultType="java.lang.Integer">
        select
        count(1)
        from book_info
        where 1=1
        <!--        <if test="name != null and name != ''">and name like CONCAT('%','${name}','%' )</if>-->
        <if test="bookId != null ">
            and book_id = #{bookId,jdbcType=INTEGER}
        </if>
        <if test="status != null  and status != '' ">
            and status = #{status,jdbcType=VARCHAR}
        </if>
        <if test="tags != null  and tags != '' ">
            and tags = #{tags,jdbcType=VARCHAR}
        </if>
        <if test="score != null  and score != '' ">
            and score = #{score,jdbcType=VARCHAR}
        </if>
        <if test="scoreCount != null  and scoreCount != '' ">
            and score_count = #{scoreCount,jdbcType=VARCHAR}
        </if>
        <if test="title != null  and title != '' ">
            and title = #{title,jdbcType=VARCHAR}
        </if>
        <if test="author != null  and author != '' ">
            and author = #{author,jdbcType=VARCHAR}
        </if>
        <if test="cover != null  and cover != '' ">
            and cover = #{cover,jdbcType=VARCHAR}
        </if>
        <if test="countWord != null  and countWord != '' ">
            and count_word = #{countWord,jdbcType=VARCHAR}
        </if>
        <if test="updateAt != null ">
            and update_at = #{updateAt,jdbcType=TIMESTAMP}
        </if>
    </select>

    <insert id="insert" parameterType="BookInfo" useGeneratedKeys="true" keyProperty="bookId">
        insert into book_info (book_id,
                               status,
                               tags,
                               score,
                               score_count,
                               title,
                               author,
                               cover,
                               count_word,
                               update_at)
        values (#{bookId,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR},
                #{score,jdbcType=VARCHAR}, #{scoreCount,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR},
                #{author,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR}, #{countWord,jdbcType=VARCHAR},
                #{updateAt,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="BookInfo" useGeneratedKeys="true" keyProperty="bookId">
        insert into book_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="status != null  and status != ''  ">status,</if>
            <if test="tags != null  and tags != ''  ">tags,</if>
            <if test="score != null  and score != ''  ">score,</if>
            <if test="scoreCount != null  and scoreCount != ''  ">score_count,</if>
            <if test="title != null  and title != ''  ">title,</if>
            <if test="author != null  and author != ''  ">author,</if>
            <if test="cover != null  and cover != ''  ">cover,</if>
            <if test="countWord != null  and countWord != ''  ">count_word,</if>
            <if test="updateAt != null  ">update_at,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="status != null  and status != ''  ">#{status,jdbcType=VARCHAR},</if>
            <if test="tags != null  and tags != ''  ">#{tags,jdbcType=VARCHAR},</if>
            <if test="score != null  and score != ''  ">#{score,jdbcType=VARCHAR},</if>
            <if test="scoreCount != null  and scoreCount != ''  ">#{scoreCount,jdbcType=VARCHAR},</if>
            <if test="title != null  and title != ''  ">#{title,jdbcType=VARCHAR},</if>
            <if test="author != null  and author != ''  ">#{author,jdbcType=VARCHAR},</if>
            <if test="cover != null  and cover != ''  ">#{cover,jdbcType=VARCHAR},</if>
            <if test="countWord != null  and countWord != ''  ">#{countWord,jdbcType=VARCHAR},</if>
            <if test="updateAt != null  ">#{updateAt,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>


    <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="bookId">
        insert into book_info (
        book_id,
        status,
        tags,
        score,
        score_count,
        title,
        author,
        cover,
        count_word,
        update_at
        )
        values
        <foreach collection="recordList" item="record" index="index" separator=",">
            (
            #{record.bookId,jdbcType=INTEGER},
            #{record.status,jdbcType=VARCHAR},
            #{record.tags,jdbcType=VARCHAR},
            #{record.score,jdbcType=VARCHAR},
            #{record.scoreCount,jdbcType=VARCHAR},
            #{record.title,jdbcType=VARCHAR},
            #{record.author,jdbcType=VARCHAR},
            #{record.cover,jdbcType=VARCHAR},
            #{record.countWord,jdbcType=VARCHAR},
            #{record.updateAt,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="BookInfo">
        update book_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="status != null  and status != ''  ">status = #{status,jdbcType=VARCHAR},</if>
            <if test="tags != null  and tags != ''  ">tags = #{tags,jdbcType=VARCHAR},</if>
            <if test="score != null  and score != ''  ">score = #{score,jdbcType=VARCHAR},</if>
            <if test="scoreCount != null  and scoreCount != ''  ">score_count = #{scoreCount,jdbcType=VARCHAR},</if>
            <if test="title != null  and title != ''  ">title = #{title,jdbcType=VARCHAR},</if>
            <if test="author != null  and author != ''  ">author = #{author,jdbcType=VARCHAR},</if>
            <if test="cover != null  and cover != ''  ">cover = #{cover,jdbcType=VARCHAR},</if>
            <if test="countWord != null  and countWord != ''  ">count_word = #{countWord,jdbcType=VARCHAR},</if>
            <if test="updateAt != null  ">update_at = #{updateAt,jdbcType=TIMESTAMP},</if>
        </trim>
        where book_id = #{bookId,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="BookInfo">
        update book_info
        set book_id     =#{bookId,jdbcType=INTEGER},
            status      =#{status,jdbcType=VARCHAR},
            tags        =#{tags,jdbcType=VARCHAR},
            score       =#{score,jdbcType=VARCHAR},
            score_count =#{scoreCount,jdbcType=VARCHAR},
            title       =#{title,jdbcType=VARCHAR},
            author      =#{author,jdbcType=VARCHAR},
            cover       =#{cover,jdbcType=VARCHAR},
            count_word  =#{countWord,jdbcType=VARCHAR},
            update_at   =#{updateAt,jdbcType=TIMESTAMP}
        where book_id = #{bookId,jdbcType=INTEGER}
    </update>

    <update id="updateBatch" parameterType="java.util.List">
        update book_info
        <trim prefix="SET" suffixOverrides=",">
            <trim prefix="status = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.status,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="tags = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.tags,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="score = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.score,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="scoreCount = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.scoreCount,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="title = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.title,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="author = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.author,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="cover = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.cover,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="countWord = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.countWord,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="updateAt = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.updateAt,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
        </trim>
        where book_id in
        <foreach collection="list" item="records" open="(" close=")" separator=", ">
            #{records.bookId}
        </foreach>
    </update>

    <update id="updateBatchSelective" parameterType="java.util.List">
        update book_info
        <trim prefix="SET" suffixOverrides=",">
            <trim prefix="status = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    <if test="records.status != null  and records.status != ''  ">
                        when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.status,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="tags = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    <if test="records.tags != null  and records.tags != ''  ">
                        when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.tags,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="score = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    <if test="records.score != null  and records.score != ''  ">
                        when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.score,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="scoreCount = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    <if test="records.scoreCount != null  and records.scoreCount != ''  ">
                        when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.scoreCount,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="title = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    <if test="records.title != null  and records.title != ''  ">
                        when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.title,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="author = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    <if test="records.author != null  and records.author != ''  ">
                        when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.author,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="cover = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    <if test="records.cover != null  and records.cover != ''  ">
                        when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.cover,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="countWord = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    <if test="records.countWord != null  and records.countWord != ''  ">
                        when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.countWord,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="updateAt = case" suffix="end,">
                <foreach collection="list" index="index" item="records">
                    <if test="records.updateAt != null  ">
                        when book_id = #{records.bookId,jdbcType=INTEGER} then #{records.updateAt,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
        </trim>
        where book_id in
        <foreach collection="list" item="records" open="(" close=")" separator=", ">
            #{records.bookId}
        </foreach>
    </update>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from book_info
        where book_id = #{bookId,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByPrimaryKeys" parameterType="java.util.List">
        delete from book_info where book_id in
        <foreach collection="list" item="ids" index="index" open="(" close=")" separator=",">
            #{ids}
        </foreach>
    </delete>

</mapper>